// 添加响应拦截器
axios.interceptors.response.use(
  response => response,
  async error => {
    const originalRequest = error.config;
    
    // 如果是 401 错误且未尝试过刷新 token
    if (error.response.status === 401 && !originalRequest._retry) {
      originalRequest._retry = true;
      
      try {
        // 调用刷新 token 的接口
        const response = await axios.post('/api/refresh-token', {
          refreshToken: localStorage.getItem('refreshToken')
        });
        
        // 更新存储的 token
        const { token } = response.data;
        localStorage.setItem('token', token);
        
        // 更新请求头并重试原始请求
        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
        return axios(originalRequest);
      } catch (refreshError) {
        // 刷新失败，重定向到登录页
        window.location.href = '/login';
        return Promise.reject(refreshError);
      }
    }
    
    return Promise.reject(error);
  }
); 